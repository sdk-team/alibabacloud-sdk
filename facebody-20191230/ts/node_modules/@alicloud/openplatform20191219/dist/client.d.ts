import * as $Util from '@alicloud/tea-util';
import RPC, * as $RPC from '@alicloud/rpc-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AuthorizeFileUploadRequest extends $tea.Model {
    product: string;
    regionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AuthorizeFileUploadResponse extends $tea.Model {
    accessKeyId: string;
    bucket: string;
    encodedPolicy: string;
    endpoint: string;
    objectKey: string;
    requestId: string;
    signature: string;
    useAccelerate: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends RPC {
    constructor(config: $RPC.Config);
    authorizeFileUpload(request: AuthorizeFileUploadRequest, runtime: $Util.RuntimeOptions): Promise<AuthorizeFileUploadResponse>;
    getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: {
        [key: string]: string;
    }, endpoint: string): string;
}
